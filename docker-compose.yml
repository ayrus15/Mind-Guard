version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: mindguard-postgres
    environment:
      POSTGRES_DB: mindguard
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mindguard-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mindguard-backend
    environment:
      NODE_ENV: development
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: mindguard
      DB_USER: postgres
      DB_PASSWORD: password
      JWT_SECRET: dev-jwt-secret-change-in-production
      JWT_REFRESH_SECRET: dev-refresh-secret-change-in-production
      JWT_EXPIRES_IN: 1h
      JWT_REFRESH_EXPIRES_IN: 7d
      FRONTEND_URL: http://localhost:8080
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mindguard-network
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mindguard-frontend
    environment:
      VITE_API_URL: http://localhost:5000
      VITE_SOCKET_URL: http://localhost:5000
      VITE_APP_NAME: MindGuard AI
    ports:
      - "8080:8080"
    depends_on:
      - backend
    networks:
      - mindguard-network

networks:
  mindguard-network:
    driver: bridge

volumes:
  postgres_data: